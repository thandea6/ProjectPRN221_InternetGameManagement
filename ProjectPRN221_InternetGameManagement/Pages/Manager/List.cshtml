@page
@model ProjectPRN221_InternetGameManagement.Pages.Manager.ListModel
@{
    ViewData["Title"] = "Manage Users";
    Layout = "_Layout"; // Áp dụng layout chung của project
}

<div class="container mt-5">
    <!-- Nút Logout và Product ở góc phải -->
    <div style="position: absolute; top: 10px; right: 10px; display: flex; gap: 10px;">
        <button onclick="location.href='@Url.Page("/Product/List")'" class="btn btn-outline-primary">Product</button>
        <form method="post" asp-page-handler="Logout">
            <button type="submit" class="btn btn-outline-danger">Logout</button>
        </form>
    </div>

    <h2 class="mb-4">Manage Users</h2>

    <!-- Bảng hiển thị danh sách người dùng -->
    <button onclick="window.location.href='@Url.Page("/Manager/AddUser")'" class="btn btn-success mb-3">Add User</button>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Username</th>
                <th>Role</th>
                <th>Time</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.Users)
            {
                <tr>
                    <td>@user.Username</td>
                    <td>@user.Role</td>
                    <td>@user.FormattedTime</td>
                    <td>
                        <button onclick="location.href='@Url.Page("/Manager/Update", new { id = user.Id })'" class="btn btn-warning btn-sm">Update</button>
                        <button onclick="confirmDelete('@user.Id')" class="btn btn-danger btn-sm">Delete</button>
                        <button onclick="location.href='@Url.Page("/Manager/AddTime", new { id = user.Id })'" class="btn btn-info btn-sm">Deposit</button>
                        <button onclick="location.href='@Url.Page("/Manager/Pay", new { accountId = user.Id })'" class="btn btn-secondary btn-sm">Pay</button>
                        <button onclick="location.href='@Url.Page("/Manager/Chat", new { accountId = user.Id })'" class="btn btn-primary btn-sm">Chat</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h3>Order Logs</h3>
    <table class="table table-bordered" id="orderLogTable">
        <thead>
            <tr>
                <th>Time</th>
                <th>Message</th>
            </tr>
        </thead>
        <tbody id="orderLogBody">
            <!-- Thông báo sẽ được thêm qua SignalR -->
        </tbody>
    </table>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.0/signalr.min.js"></script>
<script>
    // Kết nối SignalR
    const connection = new signalR.HubConnectionBuilder()
        .withUrl('/orderHub') // Đường dẫn đến SignalR Hub
        .build();

    connection.start().then(() => {
        console.log('SignalR connected.');
    }).catch(err => console.error('Error connecting to SignalR:', err));

    // Lắng nghe sự kiện "ReceiveOrderNotification" từ server
    connection.on('ReceiveOrderNotification', (username, products, time) => {
        const orderLogBody = document.getElementById('orderLogBody');
        const row = document.createElement('tr');
        const timeCell = document.createElement('td');
        const messageCell = document.createElement('td');

        timeCell.textContent = time;

        // Format nội dung thông báo
        const productDetails = products.map(p => `${p.name} x${p.quantity}`).join(', ');
        messageCell.textContent = `${username} đã order ${productDetails}`;

        row.appendChild(timeCell);
        row.appendChild(messageCell);
        orderLogBody.appendChild(row);
    });

    // Hàm xác nhận xóa tài khoản
    function confirmDelete(userId) {
        if (confirm("Are you sure you want to delete this account?")) {
            location.href = '@Url.Page("/Manager/Delete")?id=' + userId;
        }
    }
</script>
