@page
@model ProjectPRN221_InternetGameManagement.Pages.User.UserScreenModel
@{
    ViewData["Title"] = "User Page";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Screen</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <style>
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100vh;
            font-family: Arial, sans-serif;
            margin: 0;
            background-color: #f4f4f4;
        }

        .countdown {
            font-size: 3em;
            font-weight: bold;
            color: #333;
        }

        .top-right {
            position: absolute;
            top: 20px;
            right: 20px;
            display: flex;
            gap: 10px;
        }

        .button {
            padding: 10px 20px;
            font-size: 1em;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            color: white;
        }

        .logout-button {
            background-color: #f44336;
        }

        .buy-button {
            background-color: #4CAF50;
        }
    </style>
</head>
<body>
    <div class="top-right">
        <button class="button buy-button" onclick="location.href='@Url.Page("/Product/Buy")'">Buy</button>
        <form method="post">
            <button class="button logout-button" type="submit">Logout</button>
        </form>
    </div>

    <div class="countdown" id="countdown">@Model.RemainingTime</div>


    <script>
        const countdownElement = document.getElementById("countdown");
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/TimeHub")  // URL SignalR Hub
            .build();

        // Kết nối SignalR
        connection.start().then(() => {
            console.log("SignalR DA DUOC KET NOI ROI!!!.");
        }).catch(err => console.error("SignalR DANG BI LOI:", err));

        let remainingTime = @HttpContext.Session.GetInt32("RemainingTime") ? @HttpContext.Session.GetInt32("RemainingTime") : 0;
        const userId = @HttpContext.Session.GetInt32("UserId");

        // Cập nhật countdown mỗi giây
        const updateTime = () => {
            if (remainingTime > 0) {
                remainingTime--;
                countdownElement.textContent = formatTime(remainingTime);

                // Lưu lại thời gian vào sessionStorage
                sessionStorage.setItem("remainingTime", remainingTime);

                // Gửi thời gian lên server thông qua SignalR
                connection.invoke("UpdateTime", userId, remainingTime).catch(err => console.error(err));
            }
            else if (remainingTime <= 0) {
                window.location.href = "/Login?message=Bạn đã hết tiền, cần nạp thêm để sử dụng dịch vụ.";
            }

        };

        // Hàm định dạng thời gian
        const formatTime = (time) => {
            const hours = Math.floor(time / 3600); // Tính số giờ
            const minutes = Math.floor((time % 3600) / 60); // Tính số phút còn lại
            const seconds = time % 60; // Tính số giây còn lại

            // Trả về định dạng HH:MM:SS, nếu giờ = 0 thì bỏ qua phần giờ
            return hours > 0
                ? `${hours}:${minutes < 10 ? '0' : ''}${minutes}:${seconds < 10 ? '0' : ''}${seconds}`
                : `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
        };

        // Bắt đầu countdown
        setInterval(updateTime, 1000);

    </script>
</body>
</html>
